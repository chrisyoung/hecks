#!/usr/bin/env ruby
require "thor"
require_relative "commands/adapters"
require_relative "commands/domain"
require_relative "commands/hexagon"

class Hecks < Thor
  package_name "hecks"

  register(
    HecksHexagon,
    "new",
    "new NAME",
    "Create a new Hexagon")

  register(
    HecksAggregate,
    "domain:aggregate",
    "domain:aggregate NAME -h NAME -a [ATTRIBUTE:TYPE]",
    "Creates a module with an aggregate head, a repository and application")

  register(
    HecksValueObject,
    "domain:value_object",
    "domain:value_object NAME -m NAME -a [ATTRIBUTES:TYPE]",
    "Add a value object to a module")

  register(
    HecksUseCase,
    "domain:use_case",
    "domain:use_case NAME -m NAME",
    "Add a use case to a module")

  register(
    Hecks::Adapters::WebAPI,
    "adapters:drivers:web_api",
    "adapters:drivers:web_api",
    "A fast, concurrent, resourceful web server for your Domain")

  register(
    Hecks::Adapters::SQLDatabase,
    "adapters:clients:sql_database",
    "adapters:clients:sql_database NAME",
    "Creates a SQL Database")

end

def hexagon_name
  Dir.pwd.split('/').last
end

Hecks.start
